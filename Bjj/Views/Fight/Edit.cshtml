@model FightViewModel

@{
    ViewData["Title"] = "Edit fight";
}

<h1>Edit</h1>

<h4>Walka</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div class="form-group">
                @Html.LabelFor(model => model.Fighter1Id)
                @Html.DropDownListFor(x => x.Fighter1Id, Model.Fighters)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fighter2Id)
                @Html.DropDownListFor(x => x.Fighter2Id, Model.Fighters)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WinnerId)
                @Html.DropDownListFor(x => x.WinnerId, Model.Fighters)                
            </div>        
            <div class="form-group">
                <input asp-for="DateOfFight" class="form-control" />
            </div>
            <div class="form-group">
                <select asp-for="WeightCategory" asp-items="@Html.GetEnumSelectList<WeightClasses>()" class="form-control" ></select>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FightResultById)
                @Html.DropDownListFor(x => x.FightResultById, Model.FightEndBy)   
                
            </div>         
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
