@using System.Collections
@using Microsoft.VisualBasic.CompilerServices
@model Bjj.Models.Fighter

@{
    ViewData["Title"] = "Details";
    var fightsData = (IEnumerable<FightDisplay>)ViewData["Fights"];  

}

<script type="text/javascript">

window.onload = function () {
    var chart = new CanvasJS.Chart("chartContainer",
    {
      title:{
        text: "Top finishes wins"
      },
      data: [
      {
       type: "doughnut",
       dataPoints: @Html.Raw(ViewBag.Data)
      //[
     //  {  y: 53.37, indexLabel: "Android" },
      // {  y: 35.0, indexLabel: "Apple iOS" },
      // {  y: 7, indexLabel: "Blackberry" },
       //{  y: 2, indexLabel: "Windows Phone" },
       //{  y: 5, indexLabel: "Others" }
       //]
     }
     ]
   });

    chart.render();
}

window.onload = function () {
    var chart = new CanvasJS.Chart("chartContainer",
    {
      title:{
        text: "Top finishes wins"
      },
      data: [
      {
       type: "doughnut",
       dataPoints: @Html.Raw(ViewBag.Data)
      //[
     //  {  y: 53.37, indexLabel: "Android" },
      // {  y: 35.0, indexLabel: "Apple iOS" },
      // {  y: 7, indexLabel: "Blackberry" },
       //{  y: 2, indexLabel: "Windows Phone" },
       //{  y: 5, indexLabel: "Others" }
       //]
     }
     ]
   });
    var chartLoses = new CanvasJS.Chart("chartContainerLoses",
    {
      title:{
        text: "Top finishes loses"
      },
      data: [
      {
       type: "doughnut",
       dataPoints: @Html.Raw(ViewBag.DataLoses)
      //[
     //  {  y: 53.37, indexLabel: "Android" },
      // {  y: 35.0, indexLabel: "Apple iOS" },
      // {  y: 7, indexLabel: "Blackberry" },
       //{  y: 2, indexLabel: "Windows Phone" },
       //{  y: 5, indexLabel: "Others" }
       //]
     }
     ]
   });

    chart.render();
    chartLoses.render();
}
</script>
<h1>Details</h1>

<h4>Zawodnik</h4>
<hr />
<div class="row">
    <div class="col-md-4">
            <input type="hidden" asp-for="Id" />
            <div >
                <label asp-for="FirstName" class="control-label"></label>:
                <span> @Model.FirstName </span>
            </div>
            <div >
                <label asp-for="LastName" class="control-label"></label>:
                <span> @Model.LastName </span>
            </div>
            <div >
                <label asp-for="DateOfBirth" class="control-label"></label>:
                <span> @Model.DateOfBirth.ToString("dd/MM/yyyy") </span>
            </div>
            <div >
                <label asp-for="WeightCategory" class="control-label"></label>:
                <span> @Model.WeightCategory </span>
            </div>
            <div >
                <label asp-for="BeltColour" class="control-label"></label>:
                <span> @Model.BeltColour </span>
            </div>
            <div >
                <label class="control-label">Number of fights</label>:
                <span> @fightsData.Count()</span>
            </div> 
            <div >
                <label class="control-label">Academy</label>:
                <span> @Model.FAcademy.Name</span>
            </div>               
    </div>
</div>

<table class="table">
    <thead>
    <tr>
        <th>Date</th>
        <th>Oponent</th>
        <th>Result</th>
        <th>Result by</th>
    </tr>
    </thead>
    <tbody>
@foreach (var fight in fightsData)
{
    <tr>
        <td>@fight.DateOfFight </td>
        <td>@fight.Oponent </td>
        <td>@fight.Result </td>
        <td>@fight.FightResultBy </td>
    </tr>
}
    </tbody>
</table>

<div id="chartContainer" style="height: 350px; width: 60%; align-content: center;"></div><div id="chartContainerLoses" style="height: 350px; width: 60%; align-content: center;"></div>

<div>
    
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}